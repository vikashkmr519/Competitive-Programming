
import java.util.Arrays;
import java.util.Scanner;

class PrimeSieve{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t= sc.nextInt();

        while(t>0){
            int n = sc.nextInt();
            prime_sieve(n);

            t--;
        }
    }

    private static void prime_sieve(int n) {
        //create an array and make all the elements to be false that is not a prime
        boolean[] prime = new boolean[n+1];
        Arrays.fill(prime,false);

        //now make all the odd numbers as prime, because all the even numbers are never going to be
        // prime , also make 2 as the prime
        prime[2]= true;
        for(int i =3; i<=n;i+=2){
            prime[i]=true;
        }

        // now we will only check for the odd numbers , it will optimise the code

        for(int i =3;i<=n;i+=2){

            if(prime[i]){
                for(int j =i*i;j<=n;j+=i){
                    //here instead of making j =i*i
                    //we can also take j = 2*i
                    //but all the numbers below the i*i would be made non prime by the
                    // numbers less than i
                    //it will optimize the code very much
                    prime[j]=false;
                }
            }
        }

        // now just print all the numbers which are true
        for(int i =2;i<=n;i++){
            if(prime[i]){
                System.out.println(i + " ");
            }
        }

    }
}
